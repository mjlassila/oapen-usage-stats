---
title: "OAPEN usage statistics"
author: matti.lassila@tuni.fi
date-modified: last-modified
---

Reproduction of analysis published in Snijder, R., 2023. Measured in a context: making sense of open access book data. Insights: the UKSG journal, 36(1), p.20. <https://doi.org/10.1629/uksg.627>

Source code available at <https://github.com/mjlassila/oapen-usage-stats>.

Data downloaded from <https://doi.org/10.5281/zenodo.7799222>.

```{r}
#| label: setup
#| echo: false
#| message: false

library(dplyr)
library(ggplot2)
library(magrittr)
library(data.table)
library(here)
library(stringr)
library(tools)
```

```{r}
#| label: load_oapen_data
#| echo: false
#| message: false
oapen <- data.table::fread(here::here('data','TOANI_data_OAPEN Library_202201-202212.csv'))
checksum <- tools::md5sum(here::here('data','TOANI_data_OAPEN Library_202201-202212.csv'))
zenodo_checksum = "8bf03d2b43a55e3c9f0ca13ddb60f218"
```

```{r}
#| label: load_tup_data
#| echo: false
#| message: false

tup_2020 <- data.table::fread(here::here("data","tampere-university-press-202001-202012.csv"))
tup_2021 <- data.table::fread(here::here("data","tampere-university-press-202101-202112.csv"))
tup_2022 <- data.table::fread(here::here("data","tampere-university-press-202201-202212.csv"))
tup_2023 <- data.table::fread(here::here("data","tampere-university-press-202301-202312.csv"))

tup_thema <- data.table::fread("/Users/ccmala/Documents/2023/tup-books/tup-books-to-omp-thema.csv")
```

```{r}
#| label: clean_oapen_data
#| echo: false
#| message: false

oapen[oapen == ""] <- NA 
colnames(oapen) <- tolower(stringr::str_replace_all(colnames(oapen),"-","_"))

```

# Overview of the data

Let's create some basic descriptive tables to check the structure of the data. Based on result tables published in the article, we know the range of values variables should have.

Variable `language_simple` should have values *English*, *German* and *Other.* so there should be three rows in the resulting dataset when summarizing the data by `language_simple`. It seems that there might be errors in the data, because the summary table has `r nrow(oapen %>% group_by(language_simple) %>% count %>% arrange(-n))` rows.

Let's glimpse how `language_simple` looks like.

```{r}
#| label: language_simple_table
#| echo: false
#| message: false

knitr::kable(
  oapen %>% group_by(language_simple) %>% count %>% arrange(-n) %>% ungroup %>% slice_head(n = 10))
```

Apparently some rows have erroneus values at least in `language_simple` variable.

Classification (eg. general subject of the publication) variable should have 13 possible values

```{r}
#| label: classification_table
#| echo: false
#| message: false

knitr::kable(
  oapen %>% group_by(classification) %>% count)
```

Surprisingly, there is value *Total_Item_Requests* in the midst of actual classification codes.

```{r}
#| label: fix-data
#| echo: false
#| message: false

oapen_orig <- oapen

oapen %<>% filter(language_simple %in% c("English","German","Other"))
oapen %<>% filter(classification != "Total_Item_Requests")

err_rows <- oapen_orig %>% anti_join(oapen, by="uri")

oapen %<>% mutate(
  total_2022 = as.numeric(total_2022))

```

Let's see how the erroneous rows look like. In total, `r nrow(err_rows)` rows might have erroneous data.

```{r}
#| label: table_erroneus_data
#| echo: false
#| message: false

knitr::kable(
  err_rows %>% select(title,doi,total_2022,classification,language_simple) %>% 
    filter(!is.na(total_2022)) %>%
     sample_n(10),
    #col.names = c("Subject","Language","N","Median","Total"),
    caption = "Sample of erroneous dataset rows")

```

It seems that in erroneus rows, variable `total_2022` seems to have information which looks like funding data or is empty and `language_simple` has numerical information.

```{r}
#| label: prepare_data
#| echo: false
#| message: false

oapen %<>% mutate(titles_in_lang_subject_grp = total) %>% select(-total)
oapen %<>% mutate(
  id = stringr::str_replace(uri,"library.oapen.org/handle/",""),
  min = q0,
  max = q4,
  median = q2,
  first_quantile = q1,
  third_quantile = q3
  ) %>%
  select(
    -q0,
    -q1,
    -q2,
    -q3,
    -q4)

oapen_orig %<>% mutate(
  id = stringr::str_replace(uri,"library.oapen.org/handle/",""))


vars_to_select <- c(
  "titles_in_lang_subject_grp",
  "language_simple",
  "min",
  "max",
  "median",
  "first_quantile",
  "third_quantile"
)

oapen_downloads_per_group <- oapen %>% select(all_of(vars_to_select),classification) %>% distinct_all

toani_gold_standard <- oapen %>% select(uri,toani_score)
oapen %<>% select(-all_of(vars_to_select)) %>% select(-toani_score)

oapen$language_simple <- NA
oapen %<>% mutate(
  language_simple = case_when(
    language == "English" ~ "English", 
    language == "German" ~ "German",
    language != "English" & language !="German" ~ "Other"
    )
  )

```

```{r}
#| label: clean_tup_data
#| echo: false
#| message: false

tup_columns <- c("id","total")


tup_2020 %<>% select(all_of(tup_columns)) %>% mutate(year=2020)
tup_2021 %<>% select(all_of(tup_columns)) %>% mutate(year=2021)
tup_2022 %<>% select(all_of(tup_columns)) %>% mutate(year=2022)
tup_2023 %<>% select(all_of(tup_columns)) %>% mutate(year=2023)

tup_downloads <- bind_rows(
  tup_2020,
  tup_2021,
  tup_2022,
  tup_2023
)

tup_downloads %<>% inner_join(oapen_orig %>% select(id,classification), by="id")

```

```{r}
#| label: tables_setup
#| echo: false
#| message: false

col_headers <- c(
  "Subject",
  "N",
  "Min",
  "Max",
  "Median downloads",
  "Total downloads"
)


```

## Data from Snijder, R., 2023

```{r}
#| label: table_oapen_downloads_cleaned_data
#| echo: true
#| message: false

oapen_downloads_per_group %<>% relocate(classification,language_simple,titles_in_lang_subject_grp,min,max,median)


  knitr::kable(
    oapen %>%
      group_by(classification, language_simple) %>%
      mutate(n = n()) %>%
      reframe(
        number_of_titles = n,
        median_downloads = median(total_2022),
      ) %>% distinct_all,
    col.names = c("Subject", "Language", "N", "Median"),
    caption = "OAPEN Library titles by language and subject, calculated using cleaned dataset"
  )

```

Comparing results calculated using cleaned data to [Table 1](https://insights.uksg.org/articles/10.1629/uksg.627#T1) of the published article it seems that erroneous rows (n=`r nrow(err_rows)`) belong to the *C Language + English language* and *J Society & social sciences + Other language* -groups.

In the [Table 1](https://insights.uksg.org/articles/10.1629/uksg.627#T1) of published article there are 636 published titles in the *C Language + English language* grouping and 720 titles in the in the *J Society & social sciences + Other language* group and in tables created using data cleaned from errors, there are none.

## Comparing publishers

It might be interesting to make comparisons between publishers with similar publishing profiles.

At first we must check whether erroneus part of the dataset has rows we might need in comparison.

In this case, we are interested titles published by Tampere University Press and Cappellen Damm Akademisk.

```{r}
#| label: check-publishers-in-err-rows
#| echo: false

knitr::kable(err_rows %>% 
               filter(
                stringr::str_detect(publisher,"Tampere University") | 
                stringr::str_detect(publisher,"NOASP") ) %>%
               sample_n(10) %>%
               select(title,publisher,language,classification)
             )
```

Because there is `r nrow(err_rows %>% filter( stringr::str_detect(publisher,"Tampere University") | stringr::str_detect(publisher,"NOASP") )) ` rows to data related to either Tampere University Press or Cappellen Damm Akademisk, we must fix these rows and include them to our analysis to have a full view of available data.

```{r}
#| label: create-tup-noasp-dataset
#| echo: false

tup_noasp <- oapen %>% 
  filter(
    stringr::str_detect(publisher,"Tampere University") |
    stringr::str_detect(publisher,"NOASP")
    ) %>% mutate(total_2022 = as.character(total_2022)) %>% 
    bind_rows(
      err_rows %>% 
        filter(
          stringr::str_detect(publisher,"Tampere University") |
          stringr::str_detect(publisher,"NOASP")
        )
      
    ) %>%
  mutate(total_2022 = as.numeric(total_2022))


```


```{r}
#| label: tup-comparison
#| echo: false
#| message: false
#| warning: false

tup_fin <- tup_noasp %>% filter(publisher == "Tampere University Press", language == "Finnish")
tup_eng <- tup_noasp %>% filter(publisher == "Tampere University Press", language == "English")

noasp_nor <- tup_noasp %>% 
  filter(
    publisher == "Cappelen Damm Akademisk/NOASP (Nordic Open Access Scholarly Publishing)",
    language != "English") 





```

Published OAPEN data for [Cappelen Damm Akademisk/NOASP](https://press.nordicopenaccess.no/index.php/noasp) 2022

```{r}
#| label: publishing-profile-noasp
#| echo: false
#| message: false


knitr::kable(noasp_nor %>% 
  group_by(classification) %>%
  mutate(n = n()) %>%
  reframe(
    number_of_titles = n,
    min = min(total_2022),
    max = max(total_2022),
    median_downloads = median(total_2022),
    total_downloads = sum(total_2022)
    ) %>% distinct_all,
    col.names = col_headers,
    caption = "Year 2022 downloads per subject group, items published by NOASP")
```

Published OAPEN data: Tampere University Press 2022

```{r}
#| label: publishing-profile-tup-published-data
#| echo: false
#| message: false
#| warning: false

knitr::kable(tup_fin %>% 
  group_by(classification) %>%
  mutate(n = n()) %>%
  reframe(
    number_of_titles = n,
    min = min(total_2022),
    max = max(total_2022),
    median_downloads = median(total_2022),
    total_downloads = sum(total_2022)
    ) %>% distinct_all,
    col.names = col_headers,
    caption = "Year 2022 downloads per subject group, items published by TUP")
```

## Data from publisher statistics dashboard

Let's create comparison statistics for Tampere University Press using data downloaded from OAPEN publisher statistics dashboard.

```{r}
#| label: publishing-profile-tup-2020
#| echo: false
#| message: false
#| warning: false

knitr::kable(tup_downloads %>% 
  filter(year == 2020) %>%
  group_by(classification) %>%
  mutate(n = n()) %>%
  reframe(
    number_of_titles = n,
    min = min(total),
    max = max(total),
    median_downloads = median(total),
    total_downloads = sum(total)
    ) %>% distinct_all,
    col.names = col_headers,
    caption = "Year 2020 downloads per subject group, items published by TUP")
```

```{r}
#| label: publishing-profile-tup-2021
#| echo: false
#| message: false
#| warning: false

knitr::kable(tup_downloads %>% 
  filter(year == 2021) %>%
  group_by(classification) %>%
  mutate(n = n()) %>%
  reframe(
    number_of_titles = n,
    min = min(total),
    max = max(total),
    median_downloads = median(total),
    total_downloads = sum(total)
    ) %>% distinct_all,
    col.names = col_headers,
    caption = "Year 2021 downloads per subject group, items published by TUP")
```

```{r}
#| label: publishing-profile-tup-2022
#| echo: false
#| message: false
#| warning: false


knitr::kable(tup_downloads %>% 
  filter(year == 2022) %>%
  group_by(classification) %>%
  mutate(n = n()) %>%
  reframe(
    number_of_titles = n,
    min = min(total),
    max = max(total),
    median_downloads = median(total),
    total_downloads = sum(total)
    ) %>% distinct_all,
    col.names = col_headers,
    caption = "Year 2022 downloads per subject group, items published by TUP")
```

```{r}
#| label: publishing-profile-tup-2023
#| echo: false
#| message: false
#| warning: false

knitr::kable(tup_downloads %>% 
  filter(year == 2023) %>%
  group_by(classification) %>%
  mutate(n = n()) %>%
  reframe(
    number_of_titles = n,
    min = min(total),
    max = max(total),
    median_downloads = median(total),
    total_downloads = sum(total)
    ) %>% distinct_all,
  col.names = col_headers,
  caption = "Year 2023 downloads per subject group, items published by TUP")
```
